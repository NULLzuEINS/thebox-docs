name: Build pdf and publish it on GitHub releases

on:
  push:
    tags:
      - '*'

permissions:
    contents: write
    packages: write
    statuses: write


jobs:

  build:
    runs-on: ubuntu-latest
    strategy:
        matrix:
          language: [de, en]
    steps:
      - name: Step 1 - Checkout sources
        uses: actions/checkout@v4
      - name: Step 2 - Read dotenv vars
        uses: xom9ikk/dotenv@v2
      - name: Step 3.1 - Generate the documents using Docker for ${{ matrix.language }}
        run: |
          ./Scripts/build.sh ${{ matrix.language }}
      - name: Step 3.2 - Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-cache-thebox-pdf-${{ matrix.language }}-${{ hashFiles('**/Dockerfile') }}
      - name: Step 4 - Upload PDF artifact for ${{ matrix.language }}
        uses: actions/upload-artifact@v3
        with:
          name: thebox-pdf-${{ matrix.language }}
          path: Temp/Results/${{ env.THEBOX_FILENAME }}.${{ matrix.language }}.pdf
          if-no-files-found: error
          retention-days: 12


  release:
    name: release – ${{ github.ref_name }}
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Step 1.1 - Checkout sources
        uses: actions/checkout@v2
      - name: Step 1.2 - Read dotenv vars
        uses: xom9ikk/dotenv@v2

      - name: Step 2. - Download pdf artifact
        uses: actions/download-artifact@v2
        with:
          name: thebox-pdf-de
          path: Results/thebox.de.pdf
      - name: Step 3. - Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            #### Changes in this Release

            - ${{ github.event.head_commit.message }}

            ##### Download files

            | Language     | Download |
            | ------------ | -------- |
            | DE | [![Badge CV](https://img.shields.io/badge/DE-TheBox-100000?style=for-the-badge&labelColor=4E4796&color=DBD7FF)](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/${{ env.THEBOX_FILENAME }}.pdf) | 
            | EN | [![Badge CV](https://img.shields.io/badge/EN-theBox-100000?style=for-the-badge&labelColor=4E4796&color=DBD7FF)](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/${{ env.THEBOX_FILENAME }}.en.pdf) | 

          draft: false
          prerelease: false
      - name: Save upload URL for later use
        run: echo "${{ steps.create_release.outputs.upload_url }}" > Results/upload-url.txt
      - name: Upload upload_url.txt as artifact
        uses: actions/upload-artifact@v2
        with:
          name: upload-url
          path: ./Results/upload-url.txt

      - name: List files in release
        run: |
          ls -lisah Results
      - name: Step 4. - Upload PDF as release asset
        id: upload-release-asset-pdf
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_content_type: application/pdf
          asset_name: ${{ env.THEBOX_FILENAME }}-de.pdf
          asset_path: ./Results/${{ env.THEBOX_FILENAME }}.de.pdf


  upload:
    name: upload – ${{ github.ref_name }}
    runs-on: ubuntu-latest
    needs:
      - release
    steps:
        - name: Step 1.1 - Checkout sources
          uses: actions/checkout@v2
        - name: Step 1.2 - Read dotenv vars
          uses: xom9ikk/dotenv@v2

        - name: Step 2.1 - Download pdf artifact
          uses: actions/download-artifact@v2
          with:
            name: thebox-pdf-de
            path: Results/thebox.de.pdf
        - name: Step 2.2 - Download upload url artifact
          uses: actions/download-artifact@v2
          with:
            name: upload-url
            path: Results/upload-url.txt
        - name: Step 3. - Set upload url
          run: |
            echo "UPLOAD_URL=$(cat Results/upload-url.txt)" >> $GITHUB_ENV
        - name: List files in release
          run: |
            ls -lisah Results
 